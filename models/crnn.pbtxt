node {
  name: "Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "ReadFile"
  op: "ReadFile"
  input: "Placeholder"
}
node {
  name: "DecodeWav"
  op: "DecodeWav"
  input: "ReadFile"
  attr {
    key: "desired_channels"
    value {
      i: 1
    }
  }
  attr {
    key: "desired_samples"
    value {
      i: 48000
    }
  }
}
node {
  name: "Placeholder_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "Mul"
  op: "Mul"
  input: "DecodeWav"
  input: "Placeholder_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 2
        }
      }
    }
  }
}
node {
  name: "Placeholder_3"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
node {
  name: "Pad"
  op: "Pad"
  input: "Mul"
  input: "Placeholder_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\273\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "Slice"
  op: "Slice"
  input: "Pad"
  input: "Placeholder_3"
  input: "Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_4"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48000
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Placeholder_5"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "Mul_1"
  op: "Mul"
  input: "Placeholder_4"
  input: "Placeholder_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Add"
  op: "Add"
  input: "Mul_1"
  input: "Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_value/clip_value_min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "clip_by_value/clip_value_max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_value"
  op: "ClipByValue"
  input: "Add"
  input: "clip_by_value/clip_value_min"
  input: "clip_by_value/clip_value_max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AudioSpectrogram"
  op: "AudioSpectrogram"
  input: "clip_by_value"
  attr {
    key: "magnitude_squared"
    value {
      b: true
    }
  }
  attr {
    key: "stride"
    value {
      i: 160
    }
  }
  attr {
    key: "window_size"
    value {
      i: 480
    }
  }
}
node {
  name: "Mfcc"
  op: "Mfcc"
  input: "AudioSpectrogram"
  input: "DecodeWav:1"
  attr {
    key: "dct_coefficient_count"
    value {
      i: 40
    }
  }
  attr {
    key: "filterbank_channel_count"
    value {
      i: 40
    }
  }
  attr {
    key: "lower_frequency_limit"
    value {
      f: 20.0
    }
  }
  attr {
    key: "upper_frequency_limit"
    value {
      f: 4000.0
    }
  }
}
node {
  name: "fingerprint_input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 11920
        }
      }
    }
  }
}
node {
  name: "dropout_prob"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377*\001\000\000(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "fingerprint_input"
  input: "Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "W/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\n\000\000\000\004\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "W/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03409971669316292
      }
    }
  }
}
node {
  name: "W/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03409971669316292
      }
    }
  }
}
node {
  name: "W/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "W/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "W/Initializer/random_uniform/sub"
  op: "Sub"
  input: "W/Initializer/random_uniform/max"
  input: "W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@W"
      }
    }
  }
}
node {
  name: "W/Initializer/random_uniform/mul"
  op: "Mul"
  input: "W/Initializer/random_uniform/RandomUniform"
  input: "W/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@W"
      }
    }
  }
}
node {
  name: "W/Initializer/random_uniform"
  op: "Add"
  input: "W/Initializer/random_uniform/mul"
  input: "W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@W"
      }
    }
  }
}
node {
  name: "W"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 4
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "W/Assign"
  op: "Assign"
  input: "W"
  input: "W/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "W/read"
  op: "Identity"
  input: "W"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@W"
      }
    }
  }
}
node {
  name: "zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable/Assign"
  op: "Assign"
  input: "Variable"
  input: "zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable/read"
  op: "Identity"
  input: "Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
}
node {
  name: "Conv2D"
  op: "Conv2D"
  input: "Reshape"
  input: "W/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "Conv2D"
  input: "Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Relu"
  op: "Relu"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/Shape"
  op: "Shape"
  input: "Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout/random_uniform/sub"
  op: "Sub"
  input: "dropout/random_uniform/max"
  input: "dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/random_uniform/mul"
  op: "Mul"
  input: "dropout/random_uniform/RandomUniform"
  input: "dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/random_uniform"
  op: "Add"
  input: "dropout/random_uniform/mul"
  input: "dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/add"
  op: "Add"
  input: "dropout_prob"
  input: "dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/Floor"
  op: "Floor"
  input: "dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/div"
  op: "RealDiv"
  input: "Relu"
  input: "dropout_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/mul"
  op: "Mul"
  input: "dropout/div"
  input: "dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\377\377\377\377\221\000\000\000\200\t\000\000"
      }
    }
  }
}
node {
  name: "Reshape_1"
  op: "Reshape"
  input: "dropout/mul"
  input: "Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/range"
  op: "Range"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/range/start"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/Rank"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/concat"
  op: "ConcatV2"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/concat/values_0"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/range"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/transpose"
  op: "Transpose"
  input: "Reshape_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/Shape"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/strided_slice"
  op: "StridedSlice"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/Shape"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/strided_slice/stack"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/strided_slice/stack_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/GRUCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/GRUCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/strided_slice"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/GRUCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/GRUCellZeroState/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 76
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/GRUCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/GRUCellZeroState/concat"
  op: "ConcatV2"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/GRUCellZeroState/ExpandDims"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/GRUCellZeroState/Const"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/GRUCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/GRUCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/GRUCellZeroState/zeros"
  op: "Fill"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/GRUCellZeroState/concat"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/GRUCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/GRUCellZeroState/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/GRUCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/strided_slice"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/GRUCellZeroState/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/GRUCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 76
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/Shape_1"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/strided_slice_1"
  op: "StridedSlice"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/Shape_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/strided_slice_1/stack"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/strided_slice_1/stack_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/Shape_2"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/strided_slice_2"
  op: "StridedSlice"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/Shape_2"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/strided_slice_2/stack"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/strided_slice_2/stack_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/ExpandDims"
  op: "ExpandDims"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/strided_slice_2"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 76
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/concat_1"
  op: "ConcatV2"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/ExpandDims"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/Const"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/zeros"
  op: "Fill"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/concat_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/time"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArray"
  op: "TensorArrayV3"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 76
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArray_1"
  op: "TensorArrayV3"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 2432
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/Shape"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/range"
  op: "Range"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/start"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArray_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/range"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/transpose"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/transpose"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/Maximum/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/Maximum"
  op: "Maximum"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/Maximum/x"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/Minimum"
  op: "Minimum"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/strided_slice_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/iteration_counter"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Enter_1"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Enter_2"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Enter_3"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/GRUCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Merge"
  op: "Merge"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Merge_1"
  op: "Merge"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Enter_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Merge_2"
  op: "Merge"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Enter_2"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Merge_3"
  op: "Merge"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Enter_3"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Less"
  op: "Less"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Merge"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Less/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Less_1"
  op: "Less"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Merge_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Less_1/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/LogicalAnd"
  op: "LogicalAnd"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Less"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Less_1"
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/LoopCond"
  op: "LoopCond"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/LogicalAnd"
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Switch"
  op: "Switch"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Merge"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Merge"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Switch_1"
  op: "Switch"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Merge_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Merge_1"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Switch_2"
  op: "Switch"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Merge_2"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Merge_2"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Switch_3"
  op: "Switch"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Merge_3"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Merge_3"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Identity"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Identity_1"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Identity_2"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Identity_3"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/add/y"
  op: "Const"
  input: "^stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/add"
  op: "Add"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Identity"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\314\t\000\000\230\000\000\000"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04749356955289841
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04749356955289841
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/max"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform"
  op: "Add"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2508
        }
        dim {
          size: 152
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 152
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 152
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\314\t\000\000L\000\000\000"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04818694293498993
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04818694293498993
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform"
  op: "Add"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2508
        }
        dim {
          size: 76
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 76
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 76
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat/axis"
  op: "Const"
  input: "^stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat"
  op: "ConcatV2"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Identity_3"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul"
  op: "MatMul"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd"
  op: "BiasAdd"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid"
  op: "Sigmoid"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/Const"
  op: "Const"
  input: "^stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/split/split_dim"
  op: "Const"
  input: "^stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/split"
  op: "Split"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/split/split_dim"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul"
  op: "Mul"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/split"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1/axis"
  op: "Const"
  input: "^stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1"
  op: "ConcatV2"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1"
  op: "MatMul"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1"
  op: "BiasAdd"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/Tanh"
  op: "Tanh"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1"
  op: "Mul"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/split:1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub/x"
  op: "Const"
  input: "^stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub"
  op: "Sub"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub/x"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2"
  op: "Mul"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add"
  op: "Add"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/add_1/y"
  op: "Const"
  input: "^stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/add_1"
  op: "Add"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/NextIteration"
  op: "NextIteration"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/NextIteration_1"
  op: "NextIteration"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/NextIteration_2"
  op: "NextIteration"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/NextIteration_3"
  op: "NextIteration"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Exit"
  op: "Exit"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Exit_1"
  op: "Exit"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Exit_2"
  op: "Exit"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Exit_3"
  op: "Exit"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArray"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayStack/range"
  op: "Range"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayStack/range/start"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArraySizeV3"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArray"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayStack/range"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 76
        }
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 76
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/range_1"
  op: "Range"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/range_1/start"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/Rank_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/concat_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/concat_2"
  op: "ConcatV2"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/concat_2/values_0"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/range_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/transpose_1"
  op: "Transpose"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/ReverseV2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/ReverseV2"
  op: "ReverseV2"
  input: "Reshape_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/ReverseV2/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/range"
  op: "Range"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/range/start"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/Rank"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/concat"
  op: "ConcatV2"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/concat/values_0"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/range"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/transpose"
  op: "Transpose"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/ReverseV2"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/Shape"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/strided_slice"
  op: "StridedSlice"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/Shape"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/strided_slice/stack"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/strided_slice/stack_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/GRUCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/GRUCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/strided_slice"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/GRUCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/GRUCellZeroState/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 76
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/GRUCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/GRUCellZeroState/concat"
  op: "ConcatV2"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/GRUCellZeroState/ExpandDims"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/GRUCellZeroState/Const"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/GRUCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/GRUCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/GRUCellZeroState/zeros"
  op: "Fill"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/GRUCellZeroState/concat"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/GRUCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/GRUCellZeroState/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/GRUCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/strided_slice"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/GRUCellZeroState/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/GRUCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 76
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/Shape_1"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/strided_slice_1"
  op: "StridedSlice"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/Shape_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/strided_slice_1/stack"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/strided_slice_1/stack_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/Shape_2"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/strided_slice_2"
  op: "StridedSlice"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/Shape_2"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/strided_slice_2/stack"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/strided_slice_2/stack_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/ExpandDims"
  op: "ExpandDims"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/strided_slice_2"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 76
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/concat_1"
  op: "ConcatV2"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/ExpandDims"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/Const"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/zeros"
  op: "Fill"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/concat_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/time"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArray"
  op: "TensorArrayV3"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 76
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArray_1"
  op: "TensorArrayV3"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 2432
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/Shape"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/range"
  op: "Range"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/start"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArray_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/range"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/transpose"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/transpose"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/Maximum/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/Maximum"
  op: "Maximum"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/Maximum/x"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/Minimum"
  op: "Minimum"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/strided_slice_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/iteration_counter"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Enter_1"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Enter_2"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Enter_3"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/GRUCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Merge"
  op: "Merge"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Merge_1"
  op: "Merge"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Enter_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Merge_2"
  op: "Merge"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Enter_2"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Merge_3"
  op: "Merge"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Enter_3"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Less"
  op: "Less"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Merge"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Less/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Less_1"
  op: "Less"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Merge_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Less_1/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/LogicalAnd"
  op: "LogicalAnd"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Less"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Less_1"
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/LoopCond"
  op: "LoopCond"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/LogicalAnd"
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Switch"
  op: "Switch"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Merge"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Merge"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Switch_1"
  op: "Switch"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Merge_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Merge_1"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Switch_2"
  op: "Switch"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Merge_2"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Merge_2"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Switch_3"
  op: "Switch"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Merge_3"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Merge_3"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Identity"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Identity_1"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Identity_2"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Identity_3"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/add/y"
  op: "Const"
  input: "^stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/add"
  op: "Add"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Identity"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\314\t\000\000\230\000\000\000"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04749356955289841
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04749356955289841
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/max"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform"
  op: "Add"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2508
        }
        dim {
          size: 152
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 152
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 152
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\314\t\000\000L\000\000\000"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04818694293498993
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04818694293498993
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform"
  op: "Add"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2508
        }
        dim {
          size: 76
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 76
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 76
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat/axis"
  op: "Const"
  input: "^stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat"
  op: "ConcatV2"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Identity_3"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul"
  op: "MatMul"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd"
  op: "BiasAdd"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid"
  op: "Sigmoid"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/Const"
  op: "Const"
  input: "^stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/split/split_dim"
  op: "Const"
  input: "^stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/split"
  op: "Split"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/split/split_dim"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul"
  op: "Mul"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/split"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1/axis"
  op: "Const"
  input: "^stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1"
  op: "ConcatV2"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1"
  op: "MatMul"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1"
  op: "BiasAdd"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/Tanh"
  op: "Tanh"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1"
  op: "Mul"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/split:1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub/x"
  op: "Const"
  input: "^stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub"
  op: "Sub"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub/x"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2"
  op: "Mul"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add"
  op: "Add"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/add_1/y"
  op: "Const"
  input: "^stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/add_1"
  op: "Add"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/NextIteration"
  op: "NextIteration"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/NextIteration_1"
  op: "NextIteration"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/NextIteration_2"
  op: "NextIteration"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/NextIteration_3"
  op: "NextIteration"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Exit"
  op: "Exit"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Exit_1"
  op: "Exit"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Exit_2"
  op: "Exit"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Exit_3"
  op: "Exit"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArray"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayStack/range"
  op: "Range"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayStack/range/start"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArraySizeV3"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArray"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayStack/range"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 76
        }
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 76
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/range_1"
  op: "Range"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/range_1/start"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/Rank_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/concat_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/concat_2"
  op: "ConcatV2"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/concat_2/values_0"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/range_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/transpose_1"
  op: "Transpose"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/ReverseV2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/ReverseV2"
  op: "ReverseV2"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/transpose_1"
  input: "stack_bidirectional_rnn/cell_0/ReverseV2/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/concat"
  op: "ConcatV2"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/transpose_1"
  input: "stack_bidirectional_rnn/cell_0/ReverseV2"
  input: "stack_bidirectional_rnn/cell_0/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/range"
  op: "Range"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/range/start"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/Rank"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/concat"
  op: "ConcatV2"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/concat/values_0"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/range"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/transpose"
  op: "Transpose"
  input: "stack_bidirectional_rnn/cell_0/concat"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/Shape"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/strided_slice"
  op: "StridedSlice"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/Shape"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/strided_slice/stack"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/strided_slice/stack_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/GRUCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/GRUCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/strided_slice"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/GRUCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/GRUCellZeroState/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 76
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/GRUCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/GRUCellZeroState/concat"
  op: "ConcatV2"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/GRUCellZeroState/ExpandDims"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/GRUCellZeroState/Const"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/GRUCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/GRUCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/GRUCellZeroState/zeros"
  op: "Fill"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/GRUCellZeroState/concat"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/GRUCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/GRUCellZeroState/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/GRUCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/strided_slice"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/GRUCellZeroState/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/GRUCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 76
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/Shape_1"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/strided_slice_1"
  op: "StridedSlice"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/Shape_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/strided_slice_1/stack"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/strided_slice_1/stack_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/Shape_2"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/strided_slice_2"
  op: "StridedSlice"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/Shape_2"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/strided_slice_2/stack"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/strided_slice_2/stack_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/ExpandDims"
  op: "ExpandDims"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/strided_slice_2"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 76
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/concat_1"
  op: "ConcatV2"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/ExpandDims"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/Const"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/zeros"
  op: "Fill"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/concat_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/time"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArray"
  op: "TensorArrayV3"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 76
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArray_1"
  op: "TensorArrayV3"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 152
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/Shape"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/range"
  op: "Range"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/start"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArray_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/range"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/transpose"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/transpose"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/Maximum/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/Maximum"
  op: "Maximum"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/Maximum/x"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/Minimum"
  op: "Minimum"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/strided_slice_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/iteration_counter"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Enter_1"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Enter_2"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Enter_3"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/GRUCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Merge"
  op: "Merge"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Merge_1"
  op: "Merge"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Enter_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Merge_2"
  op: "Merge"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Enter_2"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Merge_3"
  op: "Merge"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Enter_3"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Less"
  op: "Less"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Merge"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Less/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Less_1"
  op: "Less"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Merge_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Less_1/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/LogicalAnd"
  op: "LogicalAnd"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Less"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Less_1"
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/LoopCond"
  op: "LoopCond"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/LogicalAnd"
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Switch"
  op: "Switch"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Merge"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Merge"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Switch_1"
  op: "Switch"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Merge_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Merge_1"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Switch_2"
  op: "Switch"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Merge_2"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Merge_2"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Switch_3"
  op: "Switch"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Merge_3"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Merge_3"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Identity"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Identity_1"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Identity_2"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Identity_3"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/add/y"
  op: "Const"
  input: "^stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/add"
  op: "Add"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Identity"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\344\000\000\000\230\000\000\000"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.12565617263317108
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.12565617263317108
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/max"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform"
  op: "Add"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 228
        }
        dim {
          size: 152
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 152
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 152
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\344\000\000\000L\000\000\000"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14048786461353302
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14048786461353302
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform"
  op: "Add"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 228
        }
        dim {
          size: 76
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 76
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 76
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat/axis"
  op: "Const"
  input: "^stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat"
  op: "ConcatV2"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Identity_3"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul"
  op: "MatMul"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd"
  op: "BiasAdd"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid"
  op: "Sigmoid"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/Const"
  op: "Const"
  input: "^stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/split/split_dim"
  op: "Const"
  input: "^stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/split"
  op: "Split"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/split/split_dim"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul"
  op: "Mul"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/split"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1/axis"
  op: "Const"
  input: "^stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1"
  op: "ConcatV2"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1"
  op: "MatMul"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1"
  op: "BiasAdd"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/Tanh"
  op: "Tanh"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1"
  op: "Mul"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/split:1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub/x"
  op: "Const"
  input: "^stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub"
  op: "Sub"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub/x"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2"
  op: "Mul"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add"
  op: "Add"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/add_1/y"
  op: "Const"
  input: "^stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/add_1"
  op: "Add"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/NextIteration"
  op: "NextIteration"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/NextIteration_1"
  op: "NextIteration"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/NextIteration_2"
  op: "NextIteration"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/NextIteration_3"
  op: "NextIteration"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Exit"
  op: "Exit"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Exit_1"
  op: "Exit"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Exit_2"
  op: "Exit"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Exit_3"
  op: "Exit"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArray"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayStack/range"
  op: "Range"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayStack/range/start"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArraySizeV3"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArray"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayStack/range"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 76
        }
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 76
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/range_1"
  op: "Range"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/range_1/start"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/Rank_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/concat_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/concat_2"
  op: "ConcatV2"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/concat_2/values_0"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/range_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/transpose_1"
  op: "Transpose"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/ReverseV2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/ReverseV2"
  op: "ReverseV2"
  input: "stack_bidirectional_rnn/cell_0/concat"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/ReverseV2/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/range"
  op: "Range"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/range/start"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/Rank"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/concat"
  op: "ConcatV2"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/concat/values_0"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/range"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/transpose"
  op: "Transpose"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/ReverseV2"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/Shape"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/strided_slice"
  op: "StridedSlice"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/Shape"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/strided_slice/stack"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/strided_slice/stack_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/GRUCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/GRUCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/strided_slice"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/GRUCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/GRUCellZeroState/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 76
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/GRUCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/GRUCellZeroState/concat"
  op: "ConcatV2"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/GRUCellZeroState/ExpandDims"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/GRUCellZeroState/Const"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/GRUCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/GRUCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/GRUCellZeroState/zeros"
  op: "Fill"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/GRUCellZeroState/concat"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/GRUCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/GRUCellZeroState/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/GRUCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/strided_slice"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/GRUCellZeroState/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/GRUCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 76
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/Shape_1"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/strided_slice_1"
  op: "StridedSlice"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/Shape_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/strided_slice_1/stack"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/strided_slice_1/stack_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/Shape_2"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/strided_slice_2"
  op: "StridedSlice"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/Shape_2"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/strided_slice_2/stack"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/strided_slice_2/stack_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/ExpandDims"
  op: "ExpandDims"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/strided_slice_2"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 76
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/concat_1"
  op: "ConcatV2"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/ExpandDims"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/Const"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/zeros"
  op: "Fill"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/concat_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/time"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArray"
  op: "TensorArrayV3"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 76
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArray_1"
  op: "TensorArrayV3"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 152
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/Shape"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/range"
  op: "Range"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/start"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArray_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/range"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/transpose"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/transpose"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/Maximum/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/Maximum"
  op: "Maximum"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/Maximum/x"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/Minimum"
  op: "Minimum"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/strided_slice_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/iteration_counter"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Enter_1"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Enter_2"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Enter_3"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/GRUCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Merge"
  op: "Merge"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Merge_1"
  op: "Merge"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Enter_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Merge_2"
  op: "Merge"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Enter_2"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Merge_3"
  op: "Merge"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Enter_3"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Less"
  op: "Less"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Merge"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Less/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Less_1"
  op: "Less"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Merge_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Less_1/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/LogicalAnd"
  op: "LogicalAnd"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Less"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Less_1"
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/LoopCond"
  op: "LoopCond"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/LogicalAnd"
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Switch"
  op: "Switch"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Merge"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Merge"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Switch_1"
  op: "Switch"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Merge_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Merge_1"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Switch_2"
  op: "Switch"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Merge_2"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Merge_2"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Switch_3"
  op: "Switch"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Merge_3"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Merge_3"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Identity"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Identity_1"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Identity_2"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Identity_3"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/add/y"
  op: "Const"
  input: "^stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/add"
  op: "Add"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Identity"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\344\000\000\000\230\000\000\000"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.12565617263317108
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.12565617263317108
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/max"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform"
  op: "Add"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 228
        }
        dim {
          size: 152
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 152
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 152
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\344\000\000\000L\000\000\000"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14048786461353302
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14048786461353302
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform"
  op: "Add"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 228
        }
        dim {
          size: 76
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 76
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 76
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat/axis"
  op: "Const"
  input: "^stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat"
  op: "ConcatV2"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Identity_3"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul"
  op: "MatMul"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd"
  op: "BiasAdd"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid"
  op: "Sigmoid"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/Const"
  op: "Const"
  input: "^stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/split/split_dim"
  op: "Const"
  input: "^stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/split"
  op: "Split"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/split/split_dim"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul"
  op: "Mul"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/split"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1/axis"
  op: "Const"
  input: "^stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1"
  op: "ConcatV2"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1"
  op: "MatMul"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1"
  op: "BiasAdd"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/Tanh"
  op: "Tanh"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1"
  op: "Mul"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/split:1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub/x"
  op: "Const"
  input: "^stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub"
  op: "Sub"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub/x"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2"
  op: "Mul"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add"
  op: "Add"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/add_1/y"
  op: "Const"
  input: "^stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/add_1"
  op: "Add"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/NextIteration"
  op: "NextIteration"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/NextIteration_1"
  op: "NextIteration"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/NextIteration_2"
  op: "NextIteration"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/NextIteration_3"
  op: "NextIteration"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Exit"
  op: "Exit"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Exit_1"
  op: "Exit"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Exit_2"
  op: "Exit"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Exit_3"
  op: "Exit"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArray"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayStack/range"
  op: "Range"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayStack/range/start"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArraySizeV3"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArray"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayStack/range"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 76
        }
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 76
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/range_1"
  op: "Range"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/range_1/start"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/Rank_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/concat_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/concat_2"
  op: "ConcatV2"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/concat_2/values_0"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/range_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/transpose_1"
  op: "Transpose"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/ReverseV2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/ReverseV2"
  op: "ReverseV2"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/transpose_1"
  input: "stack_bidirectional_rnn/cell_1/ReverseV2/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/concat"
  op: "ConcatV2"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/transpose_1"
  input: "stack_bidirectional_rnn/cell_1/ReverseV2"
  input: "stack_bidirectional_rnn/cell_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\030V\000\000"
      }
    }
  }
}
node {
  name: "Reshape_2"
  op: "Reshape"
  input: "stack_bidirectional_rnn/cell_1/concat"
  input: "Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fcw/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcw"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\030V\000\000\244\000\000\000"
      }
    }
  }
}
node {
  name: "fcw/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcw"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.01643841713666916
      }
    }
  }
}
node {
  name: "fcw/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcw"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.01643841713666916
      }
    }
  }
}
node {
  name: "fcw/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "fcw/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcw"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fcw/Initializer/random_uniform/sub"
  op: "Sub"
  input: "fcw/Initializer/random_uniform/max"
  input: "fcw/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcw"
      }
    }
  }
}
node {
  name: "fcw/Initializer/random_uniform/mul"
  op: "Mul"
  input: "fcw/Initializer/random_uniform/RandomUniform"
  input: "fcw/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcw"
      }
    }
  }
}
node {
  name: "fcw/Initializer/random_uniform"
  op: "Add"
  input: "fcw/Initializer/random_uniform/mul"
  input: "fcw/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcw"
      }
    }
  }
}
node {
  name: "fcw"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcw"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 22040
        }
        dim {
          size: 164
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fcw/Assign"
  op: "Assign"
  input: "fcw"
  input: "fcw/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcw"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fcw/read"
  op: "Identity"
  input: "fcw"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcw"
      }
    }
  }
}
node {
  name: "zeros_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 164
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 164
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_1/Assign"
  op: "Assign"
  input: "Variable_1"
  input: "zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_1/read"
  op: "Identity"
  input: "Variable_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
}
node {
  name: "MatMul"
  op: "MatMul"
  input: "Reshape_2"
  input: "fcw/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "add_1"
  op: "Add"
  input: "MatMul"
  input: "Variable_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Relu_1"
  op: "Relu"
  input: "add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/Shape"
  op: "Shape"
  input: "Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_1/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout_1/random_uniform/sub"
  op: "Sub"
  input: "dropout_1/random_uniform/max"
  input: "dropout_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/random_uniform/mul"
  op: "Mul"
  input: "dropout_1/random_uniform/RandomUniform"
  input: "dropout_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/random_uniform"
  op: "Add"
  input: "dropout_1/random_uniform/mul"
  input: "dropout_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/add"
  op: "Add"
  input: "dropout_prob"
  input: "dropout_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/Floor"
  op: "Floor"
  input: "dropout_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/div"
  op: "RealDiv"
  input: "Relu_1"
  input: "dropout_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/mul"
  op: "Mul"
  input: "dropout_1/div"
  input: "dropout_1/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\244\000\000\000\t\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal/mul"
  op: "Mul"
  input: "truncated_normal/TruncatedNormal"
  input: "truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal"
  op: "Add"
  input: "truncated_normal/mul"
  input: "truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Variable_2"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 164
        }
        dim {
          size: 9
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_2/Assign"
  op: "Assign"
  input: "Variable_2"
  input: "truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_2/read"
  op: "Identity"
  input: "Variable_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
}
node {
  name: "zeros_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 9
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable_3"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 9
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_3/Assign"
  op: "Assign"
  input: "Variable_3"
  input: "zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_3/read"
  op: "Identity"
  input: "Variable_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
}
node {
  name: "MatMul_1"
  op: "MatMul"
  input: "dropout_1/mul"
  input: "Variable_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "add_2"
  op: "Add"
  input: "MatMul_1"
  input: "Variable_3/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "groundtruth_input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 9
        }
      }
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/labels_stop_gradient"
  op: "StopGradient"
  input: "groundtruth_input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Shape"
  op: "Shape"
  input: "add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Shape_1"
  op: "Shape"
  input: "add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Sub"
  op: "Sub"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Rank_1"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice/begin"
  op: "Pack"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice"
  op: "Slice"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Shape_1"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice/begin"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/concat"
  op: "ConcatV2"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/concat/values_0"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape"
  op: "Reshape"
  input: "add_2"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Rank_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Shape_2"
  op: "Shape"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/labels_stop_gradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Sub_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Sub_1"
  op: "Sub"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Rank_2"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice_1/begin"
  op: "Pack"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Sub_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice_1"
  op: "Slice"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Shape_2"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice_1/begin"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/concat_1/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/concat_1"
  op: "ConcatV2"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/concat_1/values_0"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice_1"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_1"
  op: "Reshape"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/labels_stop_gradient"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg"
  op: "SoftmaxCrossEntropyWithLogits"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Sub_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Sub_2"
  op: "Sub"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Rank"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice_2/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice_2/size"
  op: "Pack"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Sub_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice_2"
  op: "Slice"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Shape"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice_2/begin"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_2"
  op: "Reshape"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy/Mean"
  op: "Mean"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_2"
  input: "cross_entropy/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "cross_entropy_1/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "cross_entropy_1"
      }
    }
  }
}
node {
  name: "cross_entropy_1"
  op: "ScalarSummary"
  input: "cross_entropy_1/tags"
  input: "cross_entropy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/learning_rate_input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
}
node {
  name: "train/gradients/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "train/gradients/Fill"
  op: "Fill"
  input: "train/gradients/Shape"
  input: "train/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/f_count"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/f_count_1"
  op: "Enter"
  input: "train/gradients/f_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge"
  op: "Merge"
  input: "train/gradients/f_count_1"
  input: "train/gradients/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Switch"
  op: "Switch"
  input: "train/gradients/Merge"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add/y"
  op: "Const"
  input: "^stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/Add"
  op: "Add"
  input: "train/gradients/Switch:1"
  input: "train/gradients/Add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/NextIteration"
  op: "NextIteration"
  input: "train/gradients/Add"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/StackPushV2_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/f_count_2"
  op: "Exit"
  input: "train/gradients/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/b_count"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/b_count_1"
  op: "Enter"
  input: "train/gradients/f_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge_1"
  op: "Merge"
  input: "train/gradients/b_count_1"
  input: "train/gradients/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/GreaterEqual"
  op: "GreaterEqual"
  input: "train/gradients/Merge_1"
  input: "train/gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/GreaterEqual/Enter"
  op: "Enter"
  input: "train/gradients/b_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/b_count_2"
  op: "LoopCond"
  input: "train/gradients/GreaterEqual"
}
node {
  name: "train/gradients/Switch_1"
  op: "Switch"
  input: "train/gradients/Merge_1"
  input: "train/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Sub"
  op: "Sub"
  input: "train/gradients/Switch_1:1"
  input: "train/gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/NextIteration_1"
  op: "NextIteration"
  input: "train/gradients/Sub"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/b_count_3"
  op: "Exit"
  input: "train/gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/f_count_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/f_count_4"
  op: "Enter"
  input: "train/gradients/f_count_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge_2"
  op: "Merge"
  input: "train/gradients/f_count_4"
  input: "train/gradients/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Switch_2"
  op: "Switch"
  input: "train/gradients/Merge_2"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_1/y"
  op: "Const"
  input: "^stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/Add_1"
  op: "Add"
  input: "train/gradients/Switch_2:1"
  input: "train/gradients/Add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/NextIteration_2"
  op: "NextIteration"
  input: "train/gradients/Add_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/StackPushV2_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/f_count_5"
  op: "Exit"
  input: "train/gradients/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/b_count_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/b_count_5"
  op: "Enter"
  input: "train/gradients/f_count_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge_3"
  op: "Merge"
  input: "train/gradients/b_count_5"
  input: "train/gradients/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/GreaterEqual_1"
  op: "GreaterEqual"
  input: "train/gradients/Merge_3"
  input: "train/gradients/GreaterEqual_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/GreaterEqual_1/Enter"
  op: "Enter"
  input: "train/gradients/b_count_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/b_count_6"
  op: "LoopCond"
  input: "train/gradients/GreaterEqual_1"
}
node {
  name: "train/gradients/Switch_3"
  op: "Switch"
  input: "train/gradients/Merge_3"
  input: "train/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Sub_1"
  op: "Sub"
  input: "train/gradients/Switch_3:1"
  input: "train/gradients/GreaterEqual_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/NextIteration_3"
  op: "NextIteration"
  input: "train/gradients/Sub_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/b_count_7"
  op: "Exit"
  input: "train/gradients/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/f_count_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/f_count_7"
  op: "Enter"
  input: "train/gradients/f_count_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge_4"
  op: "Merge"
  input: "train/gradients/f_count_7"
  input: "train/gradients/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Switch_4"
  op: "Switch"
  input: "train/gradients/Merge_4"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_2/y"
  op: "Const"
  input: "^stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/Add_2"
  op: "Add"
  input: "train/gradients/Switch_4:1"
  input: "train/gradients/Add_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/NextIteration_4"
  op: "NextIteration"
  input: "train/gradients/Add_2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/StackPushV2_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/f_count_8"
  op: "Exit"
  input: "train/gradients/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/b_count_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/b_count_9"
  op: "Enter"
  input: "train/gradients/f_count_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge_5"
  op: "Merge"
  input: "train/gradients/b_count_9"
  input: "train/gradients/NextIteration_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/GreaterEqual_2"
  op: "GreaterEqual"
  input: "train/gradients/Merge_5"
  input: "train/gradients/GreaterEqual_2/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/GreaterEqual_2/Enter"
  op: "Enter"
  input: "train/gradients/b_count_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/b_count_10"
  op: "LoopCond"
  input: "train/gradients/GreaterEqual_2"
}
node {
  name: "train/gradients/Switch_5"
  op: "Switch"
  input: "train/gradients/Merge_5"
  input: "train/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Sub_2"
  op: "Sub"
  input: "train/gradients/Switch_5:1"
  input: "train/gradients/GreaterEqual_2/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/NextIteration_5"
  op: "NextIteration"
  input: "train/gradients/Sub_2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/b_count_11"
  op: "Exit"
  input: "train/gradients/Switch_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/f_count_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/f_count_10"
  op: "Enter"
  input: "train/gradients/f_count_9"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge_6"
  op: "Merge"
  input: "train/gradients/f_count_10"
  input: "train/gradients/NextIteration_6"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Switch_6"
  op: "Switch"
  input: "train/gradients/Merge_6"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Add_3/y"
  op: "Const"
  input: "^stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/Add_3"
  op: "Add"
  input: "train/gradients/Switch_6:1"
  input: "train/gradients/Add_3/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/NextIteration_6"
  op: "NextIteration"
  input: "train/gradients/Add_3"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/StackPushV2_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/StackPushV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/f_count_11"
  op: "Exit"
  input: "train/gradients/Switch_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/b_count_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/b_count_13"
  op: "Enter"
  input: "train/gradients/f_count_11"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge_7"
  op: "Merge"
  input: "train/gradients/b_count_13"
  input: "train/gradients/NextIteration_7"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/GreaterEqual_3"
  op: "GreaterEqual"
  input: "train/gradients/Merge_7"
  input: "train/gradients/GreaterEqual_3/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/GreaterEqual_3/Enter"
  op: "Enter"
  input: "train/gradients/b_count_12"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/b_count_14"
  op: "LoopCond"
  input: "train/gradients/GreaterEqual_3"
}
node {
  name: "train/gradients/Switch_7"
  op: "Switch"
  input: "train/gradients/Merge_7"
  input: "train/gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Sub_3"
  op: "Sub"
  input: "train/gradients/Switch_7:1"
  input: "train/gradients/GreaterEqual_3/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/NextIteration_7"
  op: "NextIteration"
  input: "train/gradients/Sub_3"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/b_count_15"
  op: "Exit"
  input: "train/gradients/Switch_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Fill"
  input: "train/gradients/cross_entropy/Mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Shape"
  op: "Shape"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Tile"
  op: "Tile"
  input: "train/gradients/cross_entropy/Mean_grad/Reshape"
  input: "train/gradients/cross_entropy/Mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Shape_1"
  op: "Shape"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Prod"
  op: "Prod"
  input: "train/gradients/cross_entropy/Mean_grad/Shape_1"
  input: "train/gradients/cross_entropy/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Prod_1"
  op: "Prod"
  input: "train/gradients/cross_entropy/Mean_grad/Shape_2"
  input: "train/gradients/cross_entropy/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Maximum"
  op: "Maximum"
  input: "train/gradients/cross_entropy/Mean_grad/Prod_1"
  input: "train/gradients/cross_entropy/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "train/gradients/cross_entropy/Mean_grad/Prod"
  input: "train/gradients/cross_entropy/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Cast"
  op: "Cast"
  input: "train/gradients/cross_entropy/Mean_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/truediv"
  op: "RealDiv"
  input: "train/gradients/cross_entropy/Mean_grad/Tile"
  input: "train/gradients/cross_entropy/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_2_grad/Shape"
  op: "Shape"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/cross_entropy/Mean_grad/truediv"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_like"
  op: "ZerosLike"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/ExpandDims"
  op: "ExpandDims"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_2_grad/Reshape"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/mul"
  op: "Mul"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/ExpandDims"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/LogSoftmax"
  op: "LogSoftmax"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/Neg"
  op: "Neg"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/LogSoftmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/ExpandDims_1"
  op: "ExpandDims"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_2_grad/Reshape"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/mul_1"
  op: "Mul"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/ExpandDims_1"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/mul"
  input: "^train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/mul_1"
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/mul"
  input: "^train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/mul"
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/mul_1"
  input: "^train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/mul_1"
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_grad/Shape"
  op: "Shape"
  input: "add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/tuple/control_dependency"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_2_grad/Shape"
  op: "Shape"
  input: "MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 9
      }
    }
  }
}
node {
  name: "train/gradients/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/add_2_grad/Shape"
  input: "train/gradients/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_grad/Reshape"
  input: "train/gradients/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/add_2_grad/Sum"
  input: "train/gradients/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_grad/Reshape"
  input: "train/gradients/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/add_2_grad/Sum_1"
  input: "train/gradients/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/add_2_grad/Reshape"
  input: "^train/gradients/add_2_grad/Reshape_1"
}
node {
  name: "train/gradients/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/add_2_grad/Reshape"
  input: "^train/gradients/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/add_2_grad/Reshape_1"
  input: "^train/gradients/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/add_2_grad/tuple/control_dependency"
  input: "Variable_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "dropout_1/mul"
  input: "train/gradients/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/MatMul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MatMul_1_grad/MatMul"
  input: "^train/gradients/MatMul_1_grad/MatMul_1"
}
node {
  name: "train/gradients/MatMul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MatMul_1_grad/MatMul"
  input: "^train/gradients/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MatMul_1_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/MatMul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MatMul_1_grad/MatMul_1"
  input: "^train/gradients/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MatMul_1_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_grad/Shape"
  op: "Shape"
  input: "dropout_1/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_grad/Shape_1"
  op: "Shape"
  input: "dropout_1/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_1/mul_grad/Shape"
  input: "train/gradients/dropout_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/MatMul_1_grad/tuple/control_dependency"
  input: "dropout_1/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout_1/mul_grad/Mul"
  input: "train/gradients/dropout_1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_1/mul_grad/Sum"
  input: "train/gradients/dropout_1/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_grad/Mul_1"
  op: "Mul"
  input: "dropout_1/div"
  input: "train/gradients/MatMul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout_1/mul_grad/Mul_1"
  input: "train/gradients/dropout_1/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_1/mul_grad/Sum_1"
  input: "train/gradients/dropout_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_1/mul_grad/Reshape"
  input: "^train/gradients/dropout_1/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_1/mul_grad/Reshape"
  input: "^train/gradients/dropout_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_1/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_1/mul_grad/Reshape_1"
  input: "^train/gradients/dropout_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_1/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_1/div_grad/Shape"
  op: "Shape"
  input: "Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_1/div_grad/Shape_1"
  op: "Shape"
  input: "dropout_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_1/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout_1/div_grad/Shape"
  input: "train/gradients/dropout_1/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_1/div_grad/RealDiv"
  op: "RealDiv"
  input: "train/gradients/dropout_1/mul_grad/tuple/control_dependency"
  input: "dropout_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_1/div_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout_1/div_grad/RealDiv"
  input: "train/gradients/dropout_1/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_1/div_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout_1/div_grad/Sum"
  input: "train/gradients/dropout_1/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_1/div_grad/Neg"
  op: "Neg"
  input: "Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_1/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "train/gradients/dropout_1/div_grad/Neg"
  input: "dropout_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_1/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "train/gradients/dropout_1/div_grad/RealDiv_1"
  input: "dropout_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_1/div_grad/mul"
  op: "Mul"
  input: "train/gradients/dropout_1/mul_grad/tuple/control_dependency"
  input: "train/gradients/dropout_1/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout_1/div_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout_1/div_grad/mul"
  input: "train/gradients/dropout_1/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout_1/div_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout_1/div_grad/Sum_1"
  input: "train/gradients/dropout_1/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout_1/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout_1/div_grad/Reshape"
  input: "^train/gradients/dropout_1/div_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout_1/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout_1/div_grad/Reshape"
  input: "^train/gradients/dropout_1/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_1/div_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout_1/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout_1/div_grad/Reshape_1"
  input: "^train/gradients/dropout_1/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout_1/div_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Relu_1_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/dropout_1/div_grad/tuple/control_dependency"
  input: "Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/add_1_grad/Shape"
  op: "Shape"
  input: "MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 164
      }
    }
  }
}
node {
  name: "train/gradients/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/add_1_grad/Shape"
  input: "train/gradients/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/Relu_1_grad/ReluGrad"
  input: "train/gradients/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/add_1_grad/Sum"
  input: "train/gradients/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Relu_1_grad/ReluGrad"
  input: "train/gradients/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/add_1_grad/Sum_1"
  input: "train/gradients/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/add_1_grad/Reshape"
  input: "^train/gradients/add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/add_1_grad/Reshape"
  input: "^train/gradients/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/add_1_grad/Reshape_1"
  input: "^train/gradients/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/add_1_grad/tuple/control_dependency"
  input: "fcw/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reshape_2"
  input: "train/gradients/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MatMul_grad/MatMul"
  input: "^train/gradients/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MatMul_grad/MatMul"
  input: "^train/gradients/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MatMul_grad/MatMul_1"
  input: "^train/gradients/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reshape_2_grad/Shape"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/concat_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/concat_grad/mod"
  op: "FloorMod"
  input: "stack_bidirectional_rnn/cell_1/concat/axis"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/concat_grad/Shape"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/concat_grad/ShapeN"
  op: "ShapeN"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/transpose_1"
  input: "stack_bidirectional_rnn/cell_1/ReverseV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/concat_grad/mod"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/concat_grad/ShapeN"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/Reshape_2_grad/Reshape"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/concat_grad/ConcatOffset"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/Reshape_2_grad/Reshape"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/concat_grad/ConcatOffset:1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/concat_grad/Slice"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/concat_grad/Slice_1"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/concat_grad/Slice"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/concat_grad/Slice_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/concat_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/transpose_1_grad/transpose"
  op: "Transpose"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/concat_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/ReverseV2_grad/ReverseV2"
  op: "ReverseV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/concat_grad/tuple/control_dependency_1"
  input: "stack_bidirectional_rnn/cell_1/ReverseV2/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArray"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Exit_2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayStack/range"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/transpose_1_grad/transpose"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/concat_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/transpose_1_grad/transpose"
  op: "Transpose"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/ReverseV2_grad/ReverseV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArray"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Exit_2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayStack/range"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/transpose_1_grad/transpose"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_1"
  op: "ZerosLike"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/zeros_like_2"
  op: "ZerosLike"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Exit_2_grad/b_exit"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Exit_3_grad/b_exit"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
  input: "train/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch:1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Switch_3_grad/b_switch"
  input: "train/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Merge_3_grad/Switch"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Merge_3_grad/Switch"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Merge_3_grad/Switch:1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Exit_2_grad/b_exit"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Exit_3_grad/b_exit"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
  input: "train/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch:1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
  input: "train/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Merge_3_grad/Switch"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Merge_3_grad/Switch"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Merge_3_grad/Switch:1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Identity_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Identity_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/GRUCellZeroState/zeros_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/GRUCellZeroState/zeros_grad/Sum"
  op: "Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Enter_3_grad/Exit"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/GRUCellZeroState/zeros_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN"
  op: "AddN"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/control_dependency_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Shape"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Shape_1"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Shape"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Shape_1"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Sum_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Reshape"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Reshape_1"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Reshape"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Reshape_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Identity_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Identity_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/GRUCellZeroState/zeros_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/GRUCellZeroState/zeros_grad/Sum"
  op: "Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Enter_3_grad/Exit"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/GRUCellZeroState/zeros_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Shape"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Shape_1"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Shape"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Shape_1"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul"
  op: "Mul"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Identity_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Identity_3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Identity_3"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/split"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/split"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/split:1"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Sum_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Reshape"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Reshape_1"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Reshape"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Reshape_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Shape"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Shape_1"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Shape"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Shape_1"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul"
  op: "Mul"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/control_dependency_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/Tanh"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/Tanh"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/Tanh"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Sum_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Reshape"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Reshape_1"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Reshape"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Reshape_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_1"
  op: "AddN"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/control_dependency_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Shape"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Shape_1"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Shape"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Shape_1"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Sum_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Reshape"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Reshape_1"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Reshape"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Reshape_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Shape"
  op: "Const"
  input: "^train/gradients/Sub"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Shape_1"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Shape"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Shape_1"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Sum"
  op: "Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Neg"
  op: "Neg"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Neg"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Reshape"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Reshape_1"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Reshape"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Reshape_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Shape"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Shape_1"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Shape"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Shape_1"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul"
  op: "Mul"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Identity_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Identity_3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Identity_3"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/split"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/split"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/split:1"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Sum_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Reshape"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Reshape_1"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Reshape"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Reshape_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Shape"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Shape_1"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Shape"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Shape_1"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul"
  op: "Mul"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/control_dependency_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/Tanh"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/Tanh"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/Tanh"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Sum_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Reshape"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Reshape_1"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Reshape"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Reshape_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/Tanh_grad/TanhGrad"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/Tanh_grad/TanhGrad"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/Tanh_grad/TanhGrad"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Shape"
  op: "Const"
  input: "^train/gradients/Sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Shape_1"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Shape"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Shape_1"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Sum"
  op: "Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Neg"
  op: "Neg"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Neg"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Reshape"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Reshape_1"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Reshape"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Reshape_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 76
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/Switch:1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/Tanh_grad/TanhGrad"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/Tanh_grad/TanhGrad"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/Tanh_grad/TanhGrad"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Const"
  op: "Const"
  input: "^train/gradients/Sub"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Rank"
  op: "Const"
  input: "^train/gradients/Sub"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/mod"
  op: "FloorMod"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Const"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Shape"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN"
  op: "ShapeN"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/Enter_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2_1/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/mod"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Slice"
  op: "Slice"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ConcatOffset"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ConcatOffset:1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Slice"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Slice_1"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Slice"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Slice_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 228
          }
          dim {
            size: 76
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/Switch:1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 76
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/Switch:1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Shape"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Shape_1"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Shape"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Shape_1"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/split"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/split"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/split"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Sum_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Reshape"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Reshape"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Reshape_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Const"
  op: "Const"
  input: "^train/gradients/Sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Rank"
  op: "Const"
  input: "^train/gradients/Sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/mod"
  op: "FloorMod"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Const"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Shape"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN"
  op: "ShapeN"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/Enter_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/mod"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Slice"
  op: "Slice"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ConcatOffset"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ConcatOffset:1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Slice"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Slice_1"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Slice"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Slice_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 228
          }
          dim {
            size: 76
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/Switch:1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_2"
  op: "AddN"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/split_grad/concat"
  op: "ConcatV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/tuple/control_dependency"
  input: "train/gradients/AddN_2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/split_grad/concat/Const"
  op: "Const"
  input: "^train/gradients/Sub"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Shape"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Shape_1"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Shape"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Shape_1"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/split"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/split"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/split"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Sum_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Reshape"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Reshape"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Reshape_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/AddN_3"
  op: "AddN"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/split_grad/concat"
  op: "ConcatV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/tuple/control_dependency"
  input: "train/gradients/AddN_3"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/split_grad/concat/Const"
  op: "Const"
  input: "^train/gradients/Sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 152
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/Switch:1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Const"
  op: "Const"
  input: "^train/gradients/Sub"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Rank"
  op: "Const"
  input: "^train/gradients/Sub"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/mod"
  op: "FloorMod"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Const"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Shape"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/ShapeN"
  op: "ShapeN"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/mod"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/ShapeN"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/ConcatOffset"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/ConcatOffset:1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Slice"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Slice_1"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Slice"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Slice_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 228
          }
          dim {
            size: 152
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/Switch:1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 152
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/Switch:1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_4"
  op: "AddN"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/gradients/AddN_4"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_5"
  op: "AddN"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/tuple/control_dependency_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/tuple/control_dependency_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Const"
  op: "Const"
  input: "^train/gradients/Sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Rank"
  op: "Const"
  input: "^train/gradients/Sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/mod"
  op: "FloorMod"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Const"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Shape"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/ShapeN"
  op: "ShapeN"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/mod"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/ShapeN"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/ConcatOffset"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/ConcatOffset:1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Slice"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Slice_1"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Slice"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Slice_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 228
          }
          dim {
            size: 152
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/Switch:1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "train/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_6"
  op: "AddN"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/gradients/AddN_6"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_7"
  op: "AddN"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/tuple/control_dependency_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/tuple/control_dependency_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArray_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArray_1"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArray_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/range"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "train/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/AddN_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArray_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArray_1"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArray_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/range"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/transpose_grad/transpose"
  op: "Transpose"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/transpose_grad/transpose"
  op: "Transpose"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/ReverseV2_grad/ReverseV2"
  op: "ReverseV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/transpose_grad/transpose"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/ReverseV2/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/AddN_8"
  op: "AddN"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/transpose_grad/transpose"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/ReverseV2_grad/ReverseV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/transpose_grad/transpose"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/concat_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/concat_grad/mod"
  op: "FloorMod"
  input: "stack_bidirectional_rnn/cell_0/concat/axis"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/concat_grad/Shape"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/concat_grad/ShapeN"
  op: "ShapeN"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/transpose_1"
  input: "stack_bidirectional_rnn/cell_0/ReverseV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/concat_grad/mod"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/concat_grad/ShapeN"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/AddN_8"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/concat_grad/ConcatOffset"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/AddN_8"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/concat_grad/ConcatOffset:1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/concat_grad/Slice"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/concat_grad/Slice_1"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/concat_grad/Slice"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/concat_grad/Slice_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/concat_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/transpose_1_grad/transpose"
  op: "Transpose"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/concat_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/ReverseV2_grad/ReverseV2"
  op: "ReverseV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/concat_grad/tuple/control_dependency_1"
  input: "stack_bidirectional_rnn/cell_0/ReverseV2/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArray"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Exit_2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayStack/range"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/transpose_1_grad/transpose"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/concat_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/transpose_1_grad/transpose"
  op: "Transpose"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/ReverseV2_grad/ReverseV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArray"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Exit_2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayStack/range"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/transpose_1_grad/transpose"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_3"
  op: "ZerosLike"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/zeros_like_4"
  op: "ZerosLike"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Exit_2_grad/b_exit"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Exit_3_grad/b_exit"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
  input: "train/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch:1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Switch_3_grad/b_switch"
  input: "train/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Merge_3_grad/Switch"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Merge_3_grad/Switch"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Merge_3_grad/Switch:1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Exit_2_grad/b_exit"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Exit_3_grad/b_exit"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
  input: "train/gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch:1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
  input: "train/gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Merge_3_grad/Switch"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Merge_3_grad/Switch"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Merge_3_grad/Switch:1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Identity_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Identity_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/GRUCellZeroState/zeros_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/GRUCellZeroState/zeros_grad/Sum"
  op: "Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Enter_3_grad/Exit"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/GRUCellZeroState/zeros_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_9"
  op: "AddN"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/control_dependency_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Shape"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Shape_1"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Shape"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Shape_1"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_9"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_9"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Sum_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Reshape"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Reshape_1"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Reshape"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Reshape_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Identity_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Identity_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/StackPopV2"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/GRUCellZeroState/zeros_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/GRUCellZeroState/zeros_grad/Sum"
  op: "Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Enter_3_grad/Exit"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/GRUCellZeroState/zeros_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Shape"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Shape_1"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Shape"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Shape_1"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul"
  op: "Mul"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Identity_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Identity_3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Identity_3"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/split"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/split"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/split:1"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Sum_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Reshape"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Reshape_1"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Reshape"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Reshape_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Shape"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Shape_1"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Shape"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Shape_1"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul"
  op: "Mul"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/control_dependency_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/Tanh"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/Tanh"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/Tanh"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Sum_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Reshape"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Reshape_1"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Reshape"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Reshape_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_10"
  op: "AddN"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/control_dependency_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Shape"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Shape_1"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Shape"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Shape_1"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_10"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_10"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Sum_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Reshape"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Reshape_1"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Reshape"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Reshape_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Shape"
  op: "Const"
  input: "^train/gradients/Sub_2"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Shape_1"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Shape"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Shape_1"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Sum"
  op: "Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Neg"
  op: "Neg"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Neg"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Reshape"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Reshape_1"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Reshape"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Reshape_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Shape"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Shape_1"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Shape"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Shape_1"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul"
  op: "Mul"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Identity_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Identity_3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Identity_3"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/split"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/split"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/split:1"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Sum_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Reshape"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Reshape_1"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Reshape"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Reshape_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Shape"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Shape_1"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Shape"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Shape_1"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul"
  op: "Mul"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/control_dependency_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/Tanh"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/Tanh"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/Tanh"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Sum_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Reshape"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Reshape_1"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Reshape"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Reshape_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/Tanh_grad/TanhGrad"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/Tanh_grad/TanhGrad"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/Tanh_grad/TanhGrad"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Shape"
  op: "Const"
  input: "^train/gradients/Sub_3"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Shape_1"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Shape"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Shape_1"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Sum"
  op: "Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Neg"
  op: "Neg"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Neg"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Reshape"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Reshape_1"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Reshape"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Reshape_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 76
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/Switch:1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/Tanh_grad/TanhGrad"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/Tanh_grad/TanhGrad"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/Tanh_grad/TanhGrad"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Const"
  op: "Const"
  input: "^train/gradients/Sub_2"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Rank"
  op: "Const"
  input: "^train/gradients/Sub_2"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/mod"
  op: "FloorMod"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Const"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Shape"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN"
  op: "ShapeN"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/Enter_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/mod"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Slice"
  op: "Slice"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ConcatOffset"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ConcatOffset:1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Slice"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Slice_1"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Slice"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Slice_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2508
          }
          dim {
            size: 76
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/Switch:1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 76
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/Switch:1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Shape"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Shape_1"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Shape"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Shape_1"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/split"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/split"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/split"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Sum_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Reshape"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Reshape"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Reshape_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Const"
  op: "Const"
  input: "^train/gradients/Sub_3"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Rank"
  op: "Const"
  input: "^train/gradients/Sub_3"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/mod"
  op: "FloorMod"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Const"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Shape"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN"
  op: "ShapeN"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/Enter_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/mod"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Slice"
  op: "Slice"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ConcatOffset"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ConcatOffset:1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Slice"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Slice_1"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Slice"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Slice_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2508
          }
          dim {
            size: 76
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/Switch:1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_11"
  op: "AddN"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/split_grad/concat"
  op: "ConcatV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/tuple/control_dependency"
  input: "train/gradients/AddN_11"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/split_grad/concat/Const"
  op: "Const"
  input: "^train/gradients/Sub_2"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Shape"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Shape_1"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Shape"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Shape_1"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/split"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/split"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/split"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Sum_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Reshape"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Reshape"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Reshape_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/AddN_12"
  op: "AddN"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/split_grad/concat"
  op: "ConcatV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/tuple/control_dependency"
  input: "train/gradients/AddN_12"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/split_grad/concat/Const"
  op: "Const"
  input: "^train/gradients/Sub_3"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 152
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/Switch:1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Const"
  op: "Const"
  input: "^train/gradients/Sub_2"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Rank"
  op: "Const"
  input: "^train/gradients/Sub_2"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/mod"
  op: "FloorMod"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Const"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Shape"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/ShapeN"
  op: "ShapeN"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/mod"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/ShapeN"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/ConcatOffset"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/ConcatOffset:1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Slice"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Slice_1"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Slice"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Slice_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2508
          }
          dim {
            size: 152
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/Switch:1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 152
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/Switch:1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_13"
  op: "AddN"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/gradients/AddN_13"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_14"
  op: "AddN"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/tuple/control_dependency_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/tuple/control_dependency_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Const"
  op: "Const"
  input: "^train/gradients/Sub_3"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Rank"
  op: "Const"
  input: "^train/gradients/Sub_3"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/mod"
  op: "FloorMod"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Const"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Shape"
  op: "Shape"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/ShapeN"
  op: "ShapeN"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/mod"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/ShapeN"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/ConcatOffset"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/ConcatOffset:1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Slice"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Slice_1"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Slice"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Slice_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2508
          }
          dim {
            size: 152
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/Switch:1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "train/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/AddN_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_15"
  op: "AddN"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/gradients/Sub_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/gradients/AddN_15"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_16"
  op: "AddN"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/tuple/control_dependency_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/tuple/control_dependency_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArray_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArray_1"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArray_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/range"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "train/gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/AddN_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArray_1"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArray_1"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArray_1"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/range"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/transpose_grad/transpose"
  op: "Transpose"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/transpose_grad/transpose"
  op: "Transpose"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/ReverseV2_grad/ReverseV2"
  op: "ReverseV2"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/transpose_grad/transpose"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/ReverseV2/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/AddN_17"
  op: "AddN"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/transpose_grad/transpose"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/ReverseV2_grad/ReverseV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/transpose_grad/transpose"
      }
    }
  }
}
node {
  name: "train/gradients/Reshape_1_grad/Shape"
  op: "Shape"
  input: "dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/AddN_17"
  input: "train/gradients/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout/mul_grad/Shape"
  op: "Shape"
  input: "dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout/mul_grad/Shape"
  input: "train/gradients/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/Reshape_1_grad/Reshape"
  input: "dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout/mul_grad/Mul"
  input: "train/gradients/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout/mul_grad/Sum"
  input: "train/gradients/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "dropout/div"
  input: "train/gradients/Reshape_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout/mul_grad/Mul_1"
  input: "train/gradients/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout/mul_grad/Sum_1"
  input: "train/gradients/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout/mul_grad/Reshape"
  input: "^train/gradients/dropout/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout/mul_grad/Reshape"
  input: "^train/gradients/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout/mul_grad/Reshape_1"
  input: "^train/gradients/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/dropout/div_grad/Shape"
  op: "Shape"
  input: "Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout/div_grad/Shape_1"
  op: "Shape"
  input: "dropout_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/dropout/div_grad/Shape"
  input: "train/gradients/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "train/gradients/dropout/mul_grad/tuple/control_dependency"
  input: "dropout_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout/div_grad/Sum"
  op: "Sum"
  input: "train/gradients/dropout/div_grad/RealDiv"
  input: "train/gradients/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/dropout/div_grad/Sum"
  input: "train/gradients/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout/div_grad/Neg"
  op: "Neg"
  input: "Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "train/gradients/dropout/div_grad/Neg"
  input: "dropout_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "train/gradients/dropout/div_grad/RealDiv_1"
  input: "dropout_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout/div_grad/mul"
  op: "Mul"
  input: "train/gradients/dropout/mul_grad/tuple/control_dependency"
  input: "train/gradients/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/dropout/div_grad/mul"
  input: "train/gradients/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/dropout/div_grad/Sum_1"
  input: "train/gradients/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/dropout/div_grad/Reshape"
  input: "^train/gradients/dropout/div_grad/Reshape_1"
}
node {
  name: "train/gradients/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/dropout/div_grad/Reshape"
  input: "^train/gradients/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout/div_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/dropout/div_grad/Reshape_1"
  input: "^train/gradients/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/dropout/div_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/dropout/div_grad/tuple/control_dependency"
  input: "Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/add_grad/Shape"
  op: "Shape"
  input: "Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "train/gradients/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/add_grad/Shape"
  input: "train/gradients/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_grad/Sum"
  op: "Sum"
  input: "train/gradients/Relu_grad/ReluGrad"
  input: "train/gradients/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/add_grad/Sum"
  input: "train/gradients/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Relu_grad/ReluGrad"
  input: "train/gradients/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/add_grad/Sum_1"
  input: "train/gradients/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/add_grad/Reshape"
  input: "^train/gradients/add_grad/Reshape_1"
}
node {
  name: "train/gradients/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/add_grad/Reshape"
  input: "^train/gradients/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/add_grad/Reshape_1"
  input: "^train/gradients/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Reshape"
  input: "W/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\n\000\000\000\004\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/Conv2D_grad/ShapeN"
  input: "W/read"
  input: "train/gradients/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Reshape"
  input: "train/gradients/Conv2D_grad/Const"
  input: "train/gradients/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "train/beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/beta1_power/Assign"
  op: "Assign"
  input: "train/beta1_power"
  input: "train/beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/beta1_power/read"
  op: "Identity"
  input: "train/beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
}
node {
  name: "train/beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "train/beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/beta2_power/Assign"
  op: "Assign"
  input: "train/beta2_power"
  input: "train/beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/beta2_power/read"
  op: "Identity"
  input: "train/beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
}
node {
  name: "W/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\n\000\000\000\004\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "W/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "W/Adam/Initializer/zeros"
  op: "Fill"
  input: "W/Adam/Initializer/zeros/shape_as_tensor"
  input: "W/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@W"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "W/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 4
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "W/Adam/Assign"
  op: "Assign"
  input: "W/Adam"
  input: "W/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "W/Adam/read"
  op: "Identity"
  input: "W/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@W"
      }
    }
  }
}
node {
  name: "W/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\n\000\000\000\004\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "W/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "W/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "W/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "W/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@W"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "W/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 4
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "W/Adam_1/Assign"
  op: "Assign"
  input: "W/Adam_1"
  input: "W/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "W/Adam_1/read"
  op: "Identity"
  input: "W/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@W"
      }
    }
  }
}
node {
  name: "Variable/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable/Adam/Assign"
  op: "Assign"
  input: "Variable/Adam"
  input: "Variable/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable/Adam/read"
  op: "Identity"
  input: "Variable/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
}
node {
  name: "Variable/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable/Adam_1/Assign"
  op: "Assign"
  input: "Variable/Adam_1"
  input: "Variable/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable/Adam_1/read"
  op: "Identity"
  input: "Variable/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\314\t\000\000\230\000\000\000"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2508
        }
        dim {
          size: 152
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\314\t\000\000\230\000\000\000"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2508
        }
        dim {
          size: 152
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 152
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 152
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias/Adam/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias/Adam/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 152
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 152
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\314\t\000\000L\000\000\000"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2508
        }
        dim {
          size: 76
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\314\t\000\000L\000\000\000"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2508
        }
        dim {
          size: 76
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 76
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 76
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 76
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 76
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\314\t\000\000\230\000\000\000"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2508
        }
        dim {
          size: 152
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\314\t\000\000\230\000\000\000"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2508
        }
        dim {
          size: 152
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 152
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 152
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias/Adam/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias/Adam/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 152
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 152
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\314\t\000\000L\000\000\000"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2508
        }
        dim {
          size: 76
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\314\t\000\000L\000\000\000"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2508
        }
        dim {
          size: 76
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 76
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 76
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 76
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 76
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\344\000\000\000\230\000\000\000"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 228
        }
        dim {
          size: 152
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\344\000\000\000\230\000\000\000"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 228
        }
        dim {
          size: 152
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 152
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 152
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 152
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 152
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\344\000\000\000L\000\000\000"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 228
        }
        dim {
          size: 76
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\344\000\000\000L\000\000\000"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 228
        }
        dim {
          size: 76
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 76
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 76
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 76
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 76
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\344\000\000\000\230\000\000\000"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 228
        }
        dim {
          size: 152
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\344\000\000\000\230\000\000\000"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 228
        }
        dim {
          size: 152
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 152
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 152
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 152
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 152
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\344\000\000\000L\000\000\000"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 228
        }
        dim {
          size: 76
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\344\000\000\000L\000\000\000"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 228
        }
        dim {
          size: 76
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 76
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 76
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 76
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 76
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1/Assign"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1/read"
  op: "Identity"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
}
node {
  name: "fcw/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcw"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\030V\000\000\244\000\000\000"
      }
    }
  }
}
node {
  name: "fcw/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcw"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fcw/Adam/Initializer/zeros"
  op: "Fill"
  input: "fcw/Adam/Initializer/zeros/shape_as_tensor"
  input: "fcw/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcw"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fcw/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcw"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 22040
        }
        dim {
          size: 164
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fcw/Adam/Assign"
  op: "Assign"
  input: "fcw/Adam"
  input: "fcw/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcw"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fcw/Adam/read"
  op: "Identity"
  input: "fcw/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcw"
      }
    }
  }
}
node {
  name: "fcw/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcw"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\030V\000\000\244\000\000\000"
      }
    }
  }
}
node {
  name: "fcw/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcw"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fcw/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "fcw/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "fcw/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcw"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fcw/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcw"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 22040
        }
        dim {
          size: 164
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fcw/Adam_1/Assign"
  op: "Assign"
  input: "fcw/Adam_1"
  input: "fcw/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcw"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fcw/Adam_1/read"
  op: "Identity"
  input: "fcw/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcw"
      }
    }
  }
}
node {
  name: "Variable_1/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 164
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable_1/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 164
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_1/Adam/Assign"
  op: "Assign"
  input: "Variable_1/Adam"
  input: "Variable_1/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_1/Adam/read"
  op: "Identity"
  input: "Variable_1/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
}
node {
  name: "Variable_1/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 164
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable_1/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 164
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_1/Adam_1/Assign"
  op: "Assign"
  input: "Variable_1/Adam_1"
  input: "Variable_1/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_1/Adam_1/read"
  op: "Identity"
  input: "Variable_1/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
}
node {
  name: "Variable_2/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\244\000\000\000\t\000\000\000"
      }
    }
  }
}
node {
  name: "Variable_2/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable_2/Adam/Initializer/zeros"
  op: "Fill"
  input: "Variable_2/Adam/Initializer/zeros/shape_as_tensor"
  input: "Variable_2/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variable_2/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 164
        }
        dim {
          size: 9
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_2/Adam/Assign"
  op: "Assign"
  input: "Variable_2/Adam"
  input: "Variable_2/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_2/Adam/read"
  op: "Identity"
  input: "Variable_2/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
}
node {
  name: "Variable_2/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\244\000\000\000\t\000\000\000"
      }
    }
  }
}
node {
  name: "Variable_2/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable_2/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Variable_2/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Variable_2/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variable_2/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 164
        }
        dim {
          size: 9
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_2/Adam_1/Assign"
  op: "Assign"
  input: "Variable_2/Adam_1"
  input: "Variable_2/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_2/Adam_1/read"
  op: "Identity"
  input: "Variable_2/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
}
node {
  name: "Variable_3/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 9
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable_3/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 9
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_3/Adam/Assign"
  op: "Assign"
  input: "Variable_3/Adam"
  input: "Variable_3/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_3/Adam/read"
  op: "Identity"
  input: "Variable_3/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
}
node {
  name: "Variable_3/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 9
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable_3/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 9
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_3/Adam_1/Assign"
  op: "Assign"
  input: "Variable_3/Adam_1"
  input: "Variable_3/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_3/Adam_1/read"
  op: "Identity"
  input: "Variable_3/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
}
node {
  name: "train/Adam/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "train/Adam/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "train/Adam/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "train/Adam/update_W/ApplyAdam"
  op: "ApplyAdam"
  input: "W"
  input: "W/Adam"
  input: "W/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_Variable/ApplyAdam"
  op: "ApplyAdam"
  input: "Variable"
  input: "Variable/Adam"
  input: "Variable/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_fcw/ApplyAdam"
  op: "ApplyAdam"
  input: "fcw"
  input: "fcw/Adam"
  input: "fcw/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcw"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_Variable_1/ApplyAdam"
  op: "ApplyAdam"
  input: "Variable_1"
  input: "Variable_1/Adam"
  input: "Variable_1/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_Variable_2/ApplyAdam"
  op: "ApplyAdam"
  input: "Variable_2"
  input: "Variable_2/Adam"
  input: "Variable_2/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/MatMul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_Variable_3/ApplyAdam"
  op: "ApplyAdam"
  input: "Variable_3"
  input: "Variable_3/Adam"
  input: "Variable_3/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/add_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/mul"
  op: "Mul"
  input: "train/beta1_power/read"
  input: "train/Adam/beta1"
  input: "^train/Adam/update_Variable/ApplyAdam"
  input: "^train/Adam/update_Variable_1/ApplyAdam"
  input: "^train/Adam/update_Variable_2/ApplyAdam"
  input: "^train/Adam/update_Variable_3/ApplyAdam"
  input: "^train/Adam/update_W/ApplyAdam"
  input: "^train/Adam/update_fcw/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
}
node {
  name: "train/Adam/Assign"
  op: "Assign"
  input: "train/beta1_power"
  input: "train/Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/Adam/mul_1"
  op: "Mul"
  input: "train/beta2_power/read"
  input: "train/Adam/beta2"
  input: "^train/Adam/update_Variable/ApplyAdam"
  input: "^train/Adam/update_Variable_1/ApplyAdam"
  input: "^train/Adam/update_Variable_2/ApplyAdam"
  input: "^train/Adam/update_Variable_3/ApplyAdam"
  input: "^train/Adam/update_W/ApplyAdam"
  input: "^train/Adam/update_fcw/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
}
node {
  name: "train/Adam/Assign_1"
  op: "Assign"
  input: "train/beta2_power"
  input: "train/Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/Adam/update"
  op: "NoOp"
  input: "^train/Adam/Assign"
  input: "^train/Adam/Assign_1"
  input: "^train/Adam/update_Variable/ApplyAdam"
  input: "^train/Adam/update_Variable_1/ApplyAdam"
  input: "^train/Adam/update_Variable_2/ApplyAdam"
  input: "^train/Adam/update_Variable_3/ApplyAdam"
  input: "^train/Adam/update_W/ApplyAdam"
  input: "^train/Adam/update_fcw/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias/ApplyAdam"
  input: "^train/Adam/update_stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/ApplyAdam"
}
node {
  name: "train/Adam/value"
  op: "Const"
  input: "^train/Adam/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "train/Adam"
  op: "AssignAdd"
  input: "global_step"
  input: "train/Adam/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/train_op/CheckNumerics"
  op: "CheckNumerics"
  input: "cross_entropy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "message"
    value {
      s: "LossTensor is inf or nan"
    }
  }
}
node {
  name: "train/train_op/control_dependency"
  op: "Identity"
  input: "train/train_op/CheckNumerics"
  input: "^train/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/train_op/CheckNumerics"
      }
    }
  }
}
node {
  name: "ArgMax/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ArgMax"
  op: "ArgMax"
  input: "add_2"
  input: "ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "ArgMax_1/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ArgMax_1"
  op: "ArgMax"
  input: "groundtruth_input"
  input: "ArgMax_1/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Equal"
  op: "Equal"
  input: "ArgMax"
  input: "ArgMax_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/LessEqual"
  op: "LessEqual"
  input: "confusion_matrix/assert_non_negative/Const"
  input: "ArgMax_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  op: "All"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/LessEqual"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`labels` contains negative values"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (ArgMax_1:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_t"
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_t"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_t"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`labels` contains negative values"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (ArgMax_1:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/Switch"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_0"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_1"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_2"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/Switch_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative/assert_less_equal/All"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "ArgMax_1"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax_1"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/control_dependency_1"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/control_dependency"
  op: "Identity"
  input: "ArgMax_1"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax_1"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/LessEqual"
  op: "LessEqual"
  input: "confusion_matrix/assert_non_negative_1/Const"
  input: "ArgMax"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  op: "All"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/LessEqual"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`predictions` contains negative values"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (ArgMax:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_t"
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_t"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_t"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`predictions` contains negative values"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (ArgMax:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/Switch"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_0"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_1"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_2"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/Switch_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative_1/assert_less_equal/All"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "ArgMax"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/control_dependency_1"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/control_dependency_1"
  op: "Identity"
  input: "ArgMax"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax"
      }
    }
  }
}
node {
  name: "confusion_matrix/Cast_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 9
      }
    }
  }
}
node {
  name: "confusion_matrix/Cast_2"
  op: "Cast"
  input: "confusion_matrix/Cast_2/x"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Less"
  op: "Less"
  input: "confusion_matrix/control_dependency"
  input: "confusion_matrix/Cast_2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/All"
  op: "All"
  input: "confusion_matrix/assert_less/Less"
  input: "confusion_matrix/assert_less/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`labels` out of bound"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x < y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (confusion_matrix/control_dependency:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (confusion_matrix/Cast_2:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_less/All"
  input: "confusion_matrix/assert_less/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "confusion_matrix/assert_less/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/switch_t"
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/switch_t"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less/Assert/AssertGuard/switch_t"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`labels` out of bound"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x < y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (confusion_matrix/control_dependency:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_4"
  op: "Const"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (confusion_matrix/Cast_2:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_0"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_1"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_2"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch_1"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_4"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch_2"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_INT64
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_less/All"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less/All"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "confusion_matrix/control_dependency"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax_1"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch_2"
  op: "Switch"
  input: "confusion_matrix/Cast_2"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/Cast_2"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/control_dependency_1"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/control_dependency_2"
  op: "Identity"
  input: "confusion_matrix/control_dependency"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax_1"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Less"
  op: "Less"
  input: "confusion_matrix/control_dependency_1"
  input: "confusion_matrix/Cast_2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/All"
  op: "All"
  input: "confusion_matrix/assert_less_1/Less"
  input: "confusion_matrix/assert_less_1/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`predictions` out of bound"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x < y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (confusion_matrix/control_dependency_1:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (confusion_matrix/Cast_2:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_less_1/All"
  input: "confusion_matrix/assert_less_1/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "confusion_matrix/assert_less_1/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/switch_t"
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/switch_t"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less_1/Assert/AssertGuard/switch_t"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`predictions` out of bound"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x < y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (confusion_matrix/control_dependency_1:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_4"
  op: "Const"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (confusion_matrix/Cast_2:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_0"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_1"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_2"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch_1"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_4"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch_2"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_INT64
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_less_1/All"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less_1/All"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "confusion_matrix/control_dependency_1"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch_2"
  op: "Switch"
  input: "confusion_matrix/Cast_2"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/Cast_2"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/control_dependency_1"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/control_dependency_3"
  op: "Identity"
  input: "confusion_matrix/control_dependency_1"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax"
      }
    }
  }
}
node {
  name: "confusion_matrix/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\t\000\000\000\t\000\000\000"
      }
    }
  }
}
node {
  name: "confusion_matrix/stack_1"
  op: "Pack"
  input: "confusion_matrix/control_dependency_2"
  input: "confusion_matrix/control_dependency_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "axis"
    value {
      i: 1
    }
  }
}
node {
  name: "confusion_matrix/ones_like/Shape"
  op: "Shape"
  input: "confusion_matrix/control_dependency_3"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/ones_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "confusion_matrix/ones_like"
  op: "Fill"
  input: "confusion_matrix/ones_like/Shape"
  input: "confusion_matrix/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/ToInt64"
  op: "Cast"
  input: "confusion_matrix/stack"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/zeros"
  op: "Fill"
  input: "confusion_matrix/stack"
  input: "confusion_matrix/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/SparseTensorDenseAdd"
  op: "SparseTensorDenseAdd"
  input: "confusion_matrix/stack_1"
  input: "confusion_matrix/ones_like"
  input: "confusion_matrix/ToInt64"
  input: "confusion_matrix/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Cast"
  op: "Cast"
  input: "Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean"
  op: "Mean"
  input: "Cast"
  input: "Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "accuracy/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "accuracy"
      }
    }
  }
}
node {
  name: "accuracy"
  op: "ScalarSummary"
  input: "accuracy/tags"
  input: "Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "add_3"
  op: "Add"
  input: "global_step/read"
  input: "add_3/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Assign"
  op: "Assign"
  input: "global_step"
  input: "add_3"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 69
          }
        }
        string_val: "Variable"
        string_val: "Variable/Adam"
        string_val: "Variable/Adam_1"
        string_val: "Variable_1"
        string_val: "Variable_1/Adam"
        string_val: "Variable_1/Adam_1"
        string_val: "Variable_2"
        string_val: "Variable_2/Adam"
        string_val: "Variable_2/Adam_1"
        string_val: "Variable_3"
        string_val: "Variable_3/Adam"
        string_val: "Variable_3/Adam_1"
        string_val: "W"
        string_val: "W/Adam"
        string_val: "W/Adam_1"
        string_val: "fcw"
        string_val: "fcw/Adam"
        string_val: "fcw/Adam_1"
        string_val: "global_step"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
        string_val: "train/beta1_power"
        string_val: "train/beta2_power"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 69
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "Variable"
  input: "Variable/Adam"
  input: "Variable/Adam_1"
  input: "Variable_1"
  input: "Variable_1/Adam"
  input: "Variable_1/Adam_1"
  input: "Variable_2"
  input: "Variable_2/Adam"
  input: "Variable_2/Adam_1"
  input: "Variable_3"
  input: "Variable_3/Adam"
  input: "Variable_3/Adam_1"
  input: "W"
  input: "W/Adam"
  input: "W/Adam_1"
  input: "fcw"
  input: "fcw/Adam"
  input: "fcw/Adam_1"
  input: "global_step"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
  input: "train/beta1_power"
  input: "train/beta2_power"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 69
          }
        }
        string_val: "Variable"
        string_val: "Variable/Adam"
        string_val: "Variable/Adam_1"
        string_val: "Variable_1"
        string_val: "Variable_1/Adam"
        string_val: "Variable_1/Adam_1"
        string_val: "Variable_2"
        string_val: "Variable_2/Adam"
        string_val: "Variable_2/Adam_1"
        string_val: "Variable_3"
        string_val: "Variable_3/Adam"
        string_val: "Variable_3/Adam_1"
        string_val: "W"
        string_val: "W/Adam"
        string_val: "W/Adam_1"
        string_val: "fcw"
        string_val: "fcw/Adam"
        string_val: "fcw/Adam_1"
        string_val: "global_step"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
        string_val: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
        string_val: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
        string_val: "train/beta1_power"
        string_val: "train/beta2_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 69
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "Variable"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "Variable/Adam"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "Variable/Adam_1"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "Variable_1"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "Variable_1/Adam"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "Variable_1/Adam_1"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "Variable_2"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "Variable_2/Adam"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "Variable_2/Adam_1"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "Variable_3"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "Variable_3/Adam"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "Variable_3/Adam_1"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "W"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "W/Adam"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "W/Adam_1"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "fcw"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcw"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "fcw/Adam"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcw"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "fcw/Adam_1"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fcw"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
  input: "save/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias"
  input: "save/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
  input: "save/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
  input: "save/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
  input: "save/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
  input: "save/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
  input: "save/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias"
  input: "save/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
  input: "save/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
  input: "save/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel"
  input: "save/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
  input: "save/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
  input: "save/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "train/beta1_power"
  input: "save/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "train/beta2_power"
  input: "save/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_2"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_3"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_4"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_5"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_6"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "cross_entropy_1"
  input: "accuracy"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^Variable/Adam/Assign"
  input: "^Variable/Adam_1/Assign"
  input: "^Variable/Assign"
  input: "^Variable_1/Adam/Assign"
  input: "^Variable_1/Adam_1/Assign"
  input: "^Variable_1/Assign"
  input: "^Variable_2/Adam/Assign"
  input: "^Variable_2/Adam_1/Assign"
  input: "^Variable_2/Assign"
  input: "^Variable_3/Adam/Assign"
  input: "^Variable_3/Adam_1/Assign"
  input: "^Variable_3/Assign"
  input: "^W/Adam/Assign"
  input: "^W/Adam_1/Assign"
  input: "^W/Assign"
  input: "^fcw/Adam/Assign"
  input: "^fcw/Adam_1/Assign"
  input: "^fcw/Assign"
  input: "^global_step/Assign"
  input: "^stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam/Assign"
  input: "^stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1/Assign"
  input: "^stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/bias/Assign"
  input: "^stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/Assign"
  input: "^stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/Assign"
  input: "^stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/candidate/kernel/Assign"
  input: "^stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias/Adam/Assign"
  input: "^stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1/Assign"
  input: "^stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/bias/Assign"
  input: "^stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/Assign"
  input: "^stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/Assign"
  input: "^stack_bidirectional_rnn/cell_0/bidirectional_rnn/bw/gru_cell/gates/kernel/Assign"
  input: "^stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam/Assign"
  input: "^stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1/Assign"
  input: "^stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/bias/Assign"
  input: "^stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/Assign"
  input: "^stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/Assign"
  input: "^stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/candidate/kernel/Assign"
  input: "^stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias/Adam/Assign"
  input: "^stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1/Assign"
  input: "^stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/bias/Assign"
  input: "^stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/Assign"
  input: "^stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/Assign"
  input: "^stack_bidirectional_rnn/cell_0/bidirectional_rnn/fw/gru_cell/gates/kernel/Assign"
  input: "^stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam/Assign"
  input: "^stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1/Assign"
  input: "^stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/bias/Assign"
  input: "^stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/Assign"
  input: "^stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/Assign"
  input: "^stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Assign"
  input: "^stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam/Assign"
  input: "^stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1/Assign"
  input: "^stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/bias/Assign"
  input: "^stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/Assign"
  input: "^stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/Assign"
  input: "^stack_bidirectional_rnn/cell_1/bidirectional_rnn/bw/gru_cell/gates/kernel/Assign"
  input: "^stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam/Assign"
  input: "^stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1/Assign"
  input: "^stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/bias/Assign"
  input: "^stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/Assign"
  input: "^stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/Assign"
  input: "^stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Assign"
  input: "^stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam/Assign"
  input: "^stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1/Assign"
  input: "^stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/bias/Assign"
  input: "^stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/Assign"
  input: "^stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/Assign"
  input: "^stack_bidirectional_rnn/cell_1/bidirectional_rnn/fw/gru_cell/gates/kernel/Assign"
  input: "^train/beta1_power/Assign"
  input: "^train/beta2_power/Assign"
}
node {
  name: "Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\n\000\000\000\004\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\314\t\000\000\230\000\000\000"
      }
    }
  }
}
node {
  name: "Shape_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 152
      }
    }
  }
}
node {
  name: "Shape_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\314\t\000\000L\000\000\000"
      }
    }
  }
}
node {
  name: "Shape_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 76
      }
    }
  }
}
node {
  name: "Shape_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\314\t\000\000\230\000\000\000"
      }
    }
  }
}
node {
  name: "Shape_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 152
      }
    }
  }
}
node {
  name: "Shape_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\314\t\000\000L\000\000\000"
      }
    }
  }
}
node {
  name: "Shape_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 76
      }
    }
  }
}
node {
  name: "Shape_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\344\000\000\000\230\000\000\000"
      }
    }
  }
}
node {
  name: "Shape_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 152
      }
    }
  }
}
node {
  name: "Shape_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\344\000\000\000L\000\000\000"
      }
    }
  }
}
node {
  name: "Shape_13"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 76
      }
    }
  }
}
node {
  name: "Shape_14"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\344\000\000\000\230\000\000\000"
      }
    }
  }
}
node {
  name: "Shape_15"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 152
      }
    }
  }
}
node {
  name: "Shape_16"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\344\000\000\000L\000\000\000"
      }
    }
  }
}
node {
  name: "Shape_17"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 76
      }
    }
  }
}
node {
  name: "Shape_18"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\030V\000\000\244\000\000\000"
      }
    }
  }
}
node {
  name: "Shape_19"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 164
      }
    }
  }
}
node {
  name: "Shape_20"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\244\000\000\000\t\000\000\000"
      }
    }
  }
}
node {
  name: "Shape_21"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 9
      }
    }
  }
}
versions {
  producer: 26
}
